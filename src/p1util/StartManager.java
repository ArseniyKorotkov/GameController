package p1util;

import p7quart.HashCoder;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class StartManager {

    private static final String CHECK_HAVE_TABLE_SQL = """
            SELECT EXISTS (SELECT id FROM console_user);
            """;
    private static final String ACTIVATION_TABLES_SQL = """
            CREATE TABLE console_user (
                id SERIAL PRIMARY KEY,
                user_name VARCHAR(30) NOT NULL UNIQUE ,
                hash_pass INT NOT NULL,
                master BOOLEAN NOT NULL
            );
                        
            insert into console_user (user_name, hash_pass, master) values
            ('master', ?, true);
                        
            CREATE TABLE console_button (
                button VARCHAR(32) PRIMARY KEY,
                user_id int REFERENCES console_user,
                user_button VARCHAR(10) ,
                UNIQUE (user_id, user_button)
            )
            
            INSERT INTO console_button (button) VALUES           
            ('ENTER'),
            ('BACK_SPACE'),
            ('TAB'),
            ('CANCEL'),
            ('CLEAR'),
            ('SHIFT'),
            ('CONTROL'),
            ('ALT'),
            ('PAUSE'),
            ('CAPS_LOCK'),
            ('ESCAPE'),
            ('SPACE'),
            ('PAGE_UP'),
            ('PAGE_DOWN'),
            ('END'),
            ('HOME'),
            ('LEFT'),
            ('UP'),
            ('RIGHT'),
            ('DOWN'),
            ('COMMA'),
            ('MINUS'),
            ('PERIOD'),
            ('SLASH'),
            ('0'),
            ('1'),
            ('2'),
            ('3'),
            ('4'),
            ('5'),
            ('6'),
            ('7'),
            ('8'),
            ('9'),
            ('SEMICOLON'),
            ('EQUALS'),
            ('A'),
            ('B'),
            ('C'),
            ('D'),
            ('E'),
            ('F'),
            ('G'),
            ('H'),
            ('I'),
            ('J'),
            ('K'),
            ('L'),
            ('M'),
            ('N'),
            ('O'),
            ('P'),
            ('Q'),
            ('R'),
            ('S'),
            ('T'),
            ('U'),
            ('V'),
            ('W'),
            ('X'),
            ('Y'),
            ('Z'),
            ('OPEN_BRACKET'),
            ('BACK_SLASH'),
            ('CLOSE_BRACKET'),
            ('NUMPAD0'),
            ('NUMPAD1'),
            ('NUMPAD2'),
            ('NUMPAD3'),
            ('NUMPAD4'),
            ('NUMPAD5'),
            ('NUMPAD6'),
            ('NUMPAD7'),
            ('NUMPAD8'),
            ('NUMPAD9'),
            ('MULTIPLY'),
            ('ADD'),
            ('SEPARATER'),
            ('SEPARATOR'),
            ('SEPARATER;'),
            ('SUBTRACT'),
            ('DECIMAL'),
            ('DIVIDE'),
            ('DELETE'),
            ('NUM_LOCK'),
            ('SCROLL_LOCK'),
            ('F1'),
            ('F2'),
            ('F3'),
            ('F4'),
            ('F5'),
            ('F6'),
            ('F7'),
            ('F8'),
            ('F9'),
            ('F10'),
            ('F11'),
            ('F12'),
            ('F13'),
            ('F14'),
            ('F15'),
            ('F16'),
            ('F17'),
            ('F18'),
            ('F19'),
            ('F20'),
            ('F21'),
            ('F22'),
            ('F23'),
            ('F24'),
            ('PRINTSCREEN'),
            ('INSERT'),
            ('HELP'),
            ('META'),
            ('BACK_QUOTE'),
            ('QUOTE'),
            ('KP_UP'),
            ('KP_DOWN'),
            ('KP_LEFT'),
            ('KP_RIGHT'),
            ('DEAD_GRAVE'),
            ('DEAD_ACUTE'),
            ('DEAD_CIRCUMFLEX'),
            ('DEAD_TILDE'),
            ('DEAD_MACRON'),
            ('DEAD_BREVE'),
            ('DEAD_ABOVEDOT'),
            ('DEAD_DIAERESIS'),
            ('DEAD_ABOVERING'),
            ('DEAD_DOUBLEACUTE'),
            ('DEAD_CARON'),
            ('DEAD_CEDILLA'),
            ('DEAD_OGONEK'),
            ('DEAD_IOTA'),
            ('DEAD_VOICED_SOUND'),
            ('DEAD_SEMIVOICED_SOUND'),
            ('AMPERSAND'),
            ('ASTERISK'),
            ('QUOTEDBL'),
            ('LESS'),
            ('GREATER'),
            ('BRACELEFT'),
            ('BRACERIGHT'),
            ('AT'),
            ('COLON'),
            ('CIRCUMFLEX'),
            ('DOLLAR'),
            ('EURO_SIGN'),
            ('EXCLAMATION_MARK'),
            ('INVERTED_EXCLAMATION_MARK'),
            ('LEFT_PARENTHESIS'),
            ('NUMBER_SIGN'),
            ('PLUS'),
            ('RIGHT_PARENTHESIS'),
            ('UNDERSCORE'),
            ('WINDOWS'),
            ('CONTEXT_MENU'),
            ('FINAL'),
            ('CONVERT'),
            ('NONCONVERT'),
            ('ACCEPT'),
            ('MODECHANGE'),
            ('KANJI'),
            ('ALPHANUMERIC'),
            ('KATAKANA'),
            ('HIRAGANA'),
            ('FULL_WIDTH'),
            ('HALF_WIDTH'),
            ('ROMAN_CHARACTERS'),
            ('ALL_CANDIDATES'),
            ('PREVIOUS_CANDIDATE'),
            ('CODE_INPUT'),
            ('JAPANESE_KATAKANA'),
            ('JAPANESE_HIRAGANA'),
            ('JAPANESE_ROMAN'),
            ('KANA_LOCK'),
            ('INPUT_METHOD_ON_OFF'),
            ('CUT'),
            ('COPY'),
            ('PASTE'),
            ('UNDO'),
            ('AGAIN'),
            ('FIND'),
            ('PROPS'),
            ('STOP'),
            ('COMPOSE'),
            ('ALT_GRAPH'),
            ('BEGIN'),
            ('UNDEFINED');        
            """;

    public static void activateTables() {
        try (Connection connection = ConnectorManager.getConnection();
             PreparedStatement activationCheck = connection.prepareStatement(CHECK_HAVE_TABLE_SQL);
             PreparedStatement activationTables = connection.prepareStatement(ACTIVATION_TABLES_SQL)) {

            if(!activationCheck.execute()) {
                activationTables.setInt(1, HashCoder.getHash("master"));
                activationTables.executeUpdate();
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

}
